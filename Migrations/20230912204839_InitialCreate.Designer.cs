// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiOmTransaction.Context;

#nullable disable

namespace WebApiOmTransaction.Migrations
{
    [DbContext(typeof(OmOperationContext))]
    [Migration("20230912204839_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApiOmTransaction.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateEtablissementDocument")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateExpirationDocument")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroDocument")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .HasColumnType("longtext");

                    b.Property<string>("RaisonSocial")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<int>("TypeClient")
                        .HasColumnType("int");

                    b.Property<int>("TypeDocument")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomResponsable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrenomResponsable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("MontantOperation")
                        .HasColumnType("float");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroReceveur")
                        .HasColumnType("longtext");

                    b.Property<int>("SimCodeAgentId")
                        .HasColumnType("int");

                    b.Property<bool>("StatutPaye")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TypeOperation")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EntrepriseId");

                    b.HasIndex("SimCodeAgentId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.SimCodeAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeAgent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NumeroAgent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.ToTable("SimCodeAgents");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Sexe")
                        .HasColumnType("longtext");

                    b.Property<bool>("Statut")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.HasIndex("RoleId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Versement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateVersement")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("MontantVerse")
                        .HasColumnType("float");

                    b.Property<string>("NumeroVersement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<int>("TypeVersement")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OperationId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Versements");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Client", b =>
                {
                    b.HasOne("WebApiOmTransaction.Models.Entreprise", "Entreprise")
                        .WithMany("Clients")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Utilisateur", "Utilisateur")
                        .WithMany("Clients")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Operation", b =>
                {
                    b.HasOne("WebApiOmTransaction.Models.Client", "Client")
                        .WithMany("Operations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Entreprise", "Entreprise")
                        .WithMany("Operations")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.SimCodeAgent", "simCodeAgent")
                        .WithMany("Operations")
                        .HasForeignKey("SimCodeAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Utilisateur", "Utilisateur")
                        .WithMany("Operations")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Entreprise");

                    b.Navigation("Utilisateur");

                    b.Navigation("simCodeAgent");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.SimCodeAgent", b =>
                {
                    b.HasOne("WebApiOmTransaction.Models.Entreprise", "Entreprise")
                        .WithMany("SimCodeAgents")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Utilisateur", b =>
                {
                    b.HasOne("WebApiOmTransaction.Models.Entreprise", "Entreprise")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Role", "Role")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Versement", b =>
                {
                    b.HasOne("WebApiOmTransaction.Models.Client", "Client")
                        .WithMany("Versements")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Operation", "Operation")
                        .WithMany("Versements")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiOmTransaction.Models.Utilisateur", "Utilisateur")
                        .WithMany("Versements")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Operation");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Client", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("Versements");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Entreprise", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Operations");

                    b.Navigation("SimCodeAgents");

                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Operation", b =>
                {
                    b.Navigation("Versements");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Role", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.SimCodeAgent", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("WebApiOmTransaction.Models.Utilisateur", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Operations");

                    b.Navigation("Versements");
                });
#pragma warning restore 612, 618
        }
    }
}
